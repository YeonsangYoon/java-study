package com.sist.main;
/*
 *    1. 제어어
 *    -------
 *    1) static : 공통적인
 *        => Math : 모든 메소드가 Static
 *    2) final : 마지막 => 변수(상수)/class(종단 클래스 => 확장 불가능)
 *        => class final className
 *           = System, String, Math, StringBuffer => 있는 그대로 사용
 *             java.lang에 있는 대부분 final class
 *    3) abstract : 추상적인 => 공통점을 모아준다 => 프로그램에 맞게 구현
 *    -----------------------------------------------------------
 *    = 클래스의 종류
 *      1) 추상클래스
 *         형식)
 *             public abstract class ClassName {
 *                -----------------------------
 *                1. 맴버변수
 *                -----------------------------
 *                2. 구현된 메소드
 *                -----------------------------
 *                3. 구현안된 메소드
 *                    => 자신이 메모리 할당할 수 없다?
 *                -----------------------------
 *                4. 생성자
 *                -----------------------------
 *             }
 *      2) 인터페이스 : 추상 클래스의 단점을 보완
 *                      1. 단일 상속 => 다중 상속
 *                      2. 추상클래스의 일종(클래스 => 상위 클래스)
 *                      3. 구성요소
 *                      public interface Interface {
 *                         ----------------------------
 *                         변수 설정
 *                           상수형 변수
 *                           int a; => 오류 발생
 *                           int a=10;
 *                           => 컴파일시 
 *                           public static final int a=10; 로 바뀜
 *                         ----------------------------
 *                         메소드
 *                           구현이 안된 메소드
 *                           void display();
 *                           => 컴파일시
 *                           public abstract void display();
 *                         ----------------------------
 *                         메소드
 *                           구현된 메소드(JDK 1.8이상)
 *                           default void method() {...}
 *                           public 자동 추가
 *                         ----------------------------
 *                         메소드
 *                           구현된 메소드(JDK 1.8이상)
 *                           static void method() {...}
 *                           public 생략
 *                         ----------------------------
 *                      }
 *                      *** interface의 구성요소는 무조건 public
 *                      *** 추상클래스, 인터페이스는 상속을 받는 경우
 *                          반드시 선언된 추상메소드는 구현해야한다
 *                      
 *                      추상클래스 : 입출력, 네트워크, 데이터연결
 *                      인터페이스 : 윈도우 이벤트
 *      
 *      3) 내부클래스
 *         맴버클래스 : 쓰레드 => 데이터를 공유할 목적
 *         class A {
 *            A, B, C, D, E => 변수나 메소드
 *            class B {
 *            }
 *         }
 *         익명의 클래스 : 상속이 없이 오버라이딩이 가능
 *         class A{
 *            B b = new B(){
 *               void display(){}
 *            }
 *         }
 *         class B{
 *            void display(){}
 *         }
 */
public class MainClass {

}
